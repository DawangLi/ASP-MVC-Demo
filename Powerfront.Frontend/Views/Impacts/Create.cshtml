@model Powerfront.Backend.Impact.EntityFramework.Impact

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal" ng-app="impact" ng-controller='CreateImpactController'>
        <input type="text" ng-model="models.helloAngular" />
        <h1>{{models.helloAngular}}</h1>
        <h4>Impact</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ImpactName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImpactName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImpactName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Other, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Other, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <label>Start Date <input id="startyearpicker" /></label>
                
                @*@Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })*@
                <input kendo-date-time-picker
                       ng-model="str"
                       k-ng-model="obj"
                       style="width: 100%;" />

                <pre>
  str: {{ str }}
  obj: {{ obj }}
  typeof obj: {{ getType(obj) }}
  obj instanceof Date: {{ isDate(obj) }}
</pre>
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.FinishDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <label>Finish Date <input kendo-date-picker id="endyearpicker" /></label>

                @*@Html.EditorFor(model => model.FinishDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FinishDate, "", new { @class = "text-danger" })*@
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.BeneficiaryGroupId, "BeneficiaryGroupId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BeneficiaryGroupId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BeneficiaryGroupId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>


}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script>
 
</script>


@section Scripts {

    @Styles.Render("~/Content/kendo")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/kendoangular")
@Scripts.Render("~/bundles/impact")

}


